<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace:名称空间。必须是对应接口的全限定名 -->
<mapper namespace="com.itheima.mapper.BrandMapper">
<!--    由于数据库和java实体的属性命名方式不同，不能映射，可以通过resultMap 添加映射-->
    <resultMap id="brandResultMap" type="brand">
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>

    <!--    查询全部-->
    <select id="selectAll" resultMap="brandResultMap">
    select * from tb_brand;
    </select>

<!--    通过用户 id 查询-->
    <select id="selectById" resultMap="brandResultMap">
        select * from tb_brand where id=#{id}
    </select>

<!--    条件查询-->
<!--    动态条件查询
        1.if 条件判断 test：条件表达式
        2. <where> 替换 where关键字
            当其中没有条件成立时 where 关键字则省略
            使用<choose> 标签同理
        有无and没影响
-->
    <select id="selectByCondition" resultMap="brandResultMap">
    select *
    from tb_brand
--     where 1=1
    <where>
        <if test="status != null">status = #{status}</if>
        <if test="companyName != null and companyName != ''">and company_name like #{companyName}</if>
        <if test="brandName != null and brandName != ''">and brand_name like #{brandName}</if>
    </where>
    </select>

<!--    单条件动态查询-->
<!--    <choose><when><otherwise>相当于 switch case default语法 不具有break; 有无and没影响-->
    <select id="selectByConditionSingle" resultType="com.itheima.pojo.Brand">
        select *
        from tb_brand
        <where>
            <choose>
                <when test="status != null">
                    and status = #{status}
                </when>
                <when test="companyName != null and companyName != ''">
                    company_name like #{companyName}
                </when>
                <when test="brandName != null and brandName != ''">
                    brand_name like #{brandName}
                </when>
            </choose>
        </where>
    </select>
    <!--<select id="selectByConditionSingle" resultType="com.itheima.pojo.Brand">
        select *
        from tb_brand
        where
        <choose>
            <when test="status != null">
                and status = #{status}
            </when>
            <when test="companyName != null and companyName != ''">
                company_name like #{companyName}
            </when>
            <when test="brandName != null and brandName != ''">
                brand_name like #{brandName}
            </when>
            <otherwise>
                1=1
            </otherwise>
        </choose>
    </select>-->

<!--    添加 通过useGeneratedKeys keyProperty 这两个属性绑定返回 主键值 到 id 上-->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name, company_name, ordered, description, status)
        values (#{brandName},#{companyName},#{ordered},#{description},#{status})
    </insert>

<!--    修改-->
    <update id="update">
        update tb_brand
        <set>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="ordered != null">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>

<!--    根据用户id删除-->
    <delete id="deleteById">
        delete from tb_brand where id = #{id};
    </delete>
<!--    批量删除 foreach遍历 默认数组名array 使用@prarm("ids")后可使用ids作为数组名-->
    <delete id="deleteByIds">
        delete from tb_brand
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")" >
            #{id}
        </foreach>
    </delete>

</mapper>